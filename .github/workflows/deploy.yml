name: Build and Deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'

env:
  PNPM_VERSION: 9.x.x

jobs:
  build:
    name: Build artifact
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: innei-dev/shiroi
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          fetch-depth: 0
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build project
        run: |
          sh ./ci-release-build.sh

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: assets/release.zip
          retention-days: 7

      - name: Store artifact commit version
        shell: bash
        id: set_vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short "$GITHUB_SHA")"
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

  deploy:
    name: Deploy artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: 'release.zip'
          target: '/tmp/shiro'

      - name: Exec deploy script with SSH
        uses: appleboy/ssh-action@master

        with:
          command_timeout: 5m
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            set -e
            source $HOME/.bashrc
            mkdir -p $HOME/shiro
            mv /tmp/shiro/release.zip $HOME/shiro/release.zip
            rm -r /tmp/shiro
            cd $HOME/shiro
            # 其实用另一个临时文件去解压会更好，但是这里就这样了，后续可能会越来越大。
            unzip -o $HOME/shiro/release.zip
            cp $HOME/shiro/.env $HOME/shiro/standalone/.env
            export NEXT_SHARP_PATH=$(npm root -g)/sharp
            pm2 reload $HOME/shiro/standalone/ecosystem.config.js
            rm $HOME/shiro/release.zip
            echo "Deployed successfully"

  store:
    name: Store artifact commit version
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      # Get the commit version from the build job
      - name: Use outputs from build
        run: |
          echo "SHA Short from build: ${{ needs.build.outputs.sha_short }}"
          echo "Branch from build: ${{ needs.build.outputs.branch }}"
      - name: Write hash to file
        run: echo ${{ needs.build.outputs.sha_short }} > build_hash
      - name: Push
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: main
